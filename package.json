{
  "name": "nodecube-example",
  "description": "Boilerplate code and a demo for HTTP API projects based on nodecube",
  "author": "dexteryy <dexter.yy@gmail.com>",
  "contributors": [],
  "bugs": {
    "url": "https://github.com/dexteryy/nodecube-example/issues"
  },
  "repository": "https://github.com/dexteryy/nodecube-example",
  "version": "0.1.0",
  "main": "server.js",
  "scripts": {
    "precommit": "npm run lint && npm run build",
    "lint": "./node_modules/eslint/bin/eslint.js server/**",
    "build": "if [ -d build ]; then rm -r build; fi; npm run build:server",
    "build:server": "./node_modules/babel-cli/bin/babel.js server --out-dir build --source-maps",
    "test": "npm run build && npm run test:nobuild",
    "test:nobuild": "./node_modules/mocha/bin/mocha build/**/*.spec.js",
    "debug": "npm run build && node --inspect=localhost:8130 --debug-brk server.js",
    "start": "npm run build && node server.js",
    "upgrade": "rm -rf ./node_modules yarn.lock && yarn",
    "dev": "COMPOSE_PROJECT_NAME=nodecube-example PORT=8030 DEBUG_PORT=8130 AUTO_RESTART=no CUSTOM_CMD=\"npm run start\" docker-compose -f ./node_modules/nodecube/configs/docker-compose-dev.yml -f configs/docker-compose-dev.override.yml up",
    "dev:debug": "COMPOSE_PROJECT_NAME=nodecube-example PORT=8030 DEBUG_PORT=8130 AUTO_RESTART=no CUSTOM_CMD=\"npm run debug\" docker-compose -f ./node_modules/nodecube/configs/docker-compose-dev.yml -f configs/docker-compose-dev.override.yml up",
    "dev:test": "COMPOSE_PROJECT_NAME=nodecube-example PORT=8030 DEBUG_PORT=8130 AUTO_RESTART=no CUSTOM_CMD=\"npm run test\" docker-compose -f ./node_modules/nodecube/configs/docker-compose-dev.yml -f configs/docker-compose-dev.override.yml up",
    "dev:rebuild": "npm run dev:reset; npm run dev:test",
    "dev:empty": "docker rm -f nodecube-example-redis nodecube-example-mongo nodecube-example-mongoimport nodecube-example-mysql; docker rmi nodecube-example-mongoimport",
    "dev:reset": "docker rm -f nodecube-example-service; docker rmi nodecube-example-service; npm run dev:empty"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "engines": {
    "node": ">=7.8"
  },
  "dependencies": {
    "nodecube": "^0.1.22"
  },
  "keywords": [
    "restful",
    "api-service",
    "microservice",
    "12-factor",
    "docker",
    "docker-compose",
    "express",
    "jwt",
    "es6",
    "async-await",
    "boilerplate",
    "starter-kit",
    "generator",
    "minimal",
    "zero-configuration"
  ]
}
